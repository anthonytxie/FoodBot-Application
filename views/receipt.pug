doctype html
html(lang="en")
	head
		title Burger
		meta(name="viewport", content="width=device-width, initial-scale=1")
		link(href="https://fonts.googleapis.com/css?family=Lato:300,400" rel="stylesheet")
		link(rel="stylesheet", href="https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css")
		link(rel ='stylesheet', href="receipt.css", type='text/css')
		script(src="https://code.jquery.com/jquery-1.11.3.min.js")
		script(src="https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js")
		script(src="dragend-master/dragend.js")
		script(src='https://checkout.stripe.com/checkout.js')
	body
		script.
			// code to connect to the extension necessary to close this view
			(function(d, s, id){
				var js, fjs = d.getElementsByTagName(s)[0];
				if (d.getElementById(id)) {return;}
				js = d.createElement(s); js.id = id;
				js.src = "//connect.facebook.com/en_US/messenger.Extensions.js";
				fjs.parentNode.insertBefore(js, fjs);
			}(document, 'script', 'Messenger'));

		- // this page is going to broken up into several phases
		- // 1: see receipt, remove / restore items
		- // 2: ajax/get_order, see pickup or delivery, time, pay button
		- // 3: payment
		
		- // VIEW 1

		- const items = order._items; // all items in the order
		- let index = 0;

		form(style="position:relative;", method="post", action="delete")

			h4 ORDER SO FAR
			input(type="hidden", name="orderId", value=order._id)

			- let order_price = 0;

			while index < items.length
				- let item = items[index];  // loop through each item in the list
				- let name = item.itemName; // name of current item
				- let combo_price = item.price; // equal to the price of the item or combo, if applicable

				- let combo = "";
				if item.itemType === "burger"
					if index <= items.length - 3
						if typeof itemCombo in items[index + 1] !== "undefined"
							- combo = "(Combo)"
							- combo_price = combo_price + items[index + 1].price + items[index + 2].price

				- order_price += combo_price;
				span
					input.hidden_remove(type="hidden", name="keepIds[]", value=item._id)
					.wide_checkbox(toggle=index)
						.custom_check_on
						.toggle
							h3 #{item.itemName} #{combo}
						p.price #{combo_price}

					if item.itemType === "burger"
						.zoom(value=item._id, style="display:none")
							- let toppings = item.standardToppings.concat(item.premiumToppings)
							each topping in toppings
								.topping= topping
							
							if combo
								- let combo_drink = undefined; // find the drink and side that are part of this combo
								- let combo_side = undefined;
								if items[index + 1] === "drink"
									- combo_drink = items[index + 1];
									- combo_side = items[index + 2];
								else
									- combo_side = items[index + 1];
									- combo_drink = items[index + 2];

									- price	+= combo_drink.price; // add the drink to the delete id list
									.drink= combo_drink.itemName
									.price= combo_drink.price
									input.hidden_remove(type="hidden", name="keepIds[]", value=combo_drink._id)

									- price	+= combo_side.price; // add the side to the delete id list
									.side= combo_side.itemName
									.price= combo_side.price
									input.hidden_remove(type="hidden", name="keepIds[]", value=combo_side._id)

								- index += 2; // this is so we don't enter drinks and sides twice
				- index++;
				
			p Total: #{order_price}
			button.view1button.doneview1(style="position:absolute; bottom:0;") Confirm

		//- VIEW 2
		#view2container(style="display:none;")
			input(name="method", type="radio", value="pickup")
			input(name="method", type="radio", value="delivery")
			input(name="time", type="time", value="22:15:00")
			.item_row
				.item Burger
				.price 12
			.item_row
				.item HST (13%)
				.price 1
			.item_row
				.item Processing Fee
				.price 1
			input#doneview2(type="submit", value="Checkout")
		
		script.
			// view 1
			//- // horizontal scroll
			//- options = {};
			//- $("#view1container").dragend(options);
			//- // send delete requests with AJAX
			//- $(".dragend-page form").submit(function(e) {

			//- 	$.ajax({
			//- 		type: "POST",
			//- 		url: "delete", // script where we handle deleting
			//- 		data: $(this).serialize(), // serializes the form's elements
			//- 		success: function(data) {
			//- 			console.log("delete request sent successfully");
			//- 		}
			//- 	});

			//- 	e.preventDefault(); // avoids actually submitting the form
			//- });

			// add to deleteIds
			$("form").on("click", ".custom_check_on", function(){
				$(".hidden_remove").prop("name", "removeIds[]");
				$(this).removeClass("custom_check_on");
				$(this).addClass("custom_check_off");
			})

			// remove from deleteIds
			$("form").on("click", ".custom_check_off", function(){
				$(".hidden_remove").prop("name", "keepIds[]");
				$(this).removeClass("custom_check_off");
				$(this).addClass("custom_check_on");
			})

			// click confirm button
			$(".doneview1").click(function(e){
				e.preventDefault();
				$("#view1container").hide();
				$("#view2container").show();
			})

			// view 2
			// all payment stuff
			var handler = StripeCheckout.configure({
				key: 'pk_test_6pRNASCoBOKtIshFeQd4XMUh',
				image: 'https://stripe.com/img/documentation/checkout/marketplace.png', // use personal image
				locale: 'auto',
				currency: "CAD",
				token: function(token) {
					// You can access the token ID with `token.id`.
					// Get the token ID to your server-side code for use.
				}
			});
			document.getElementById('doneview2').addEventListener('click', function(e) {
				// Open Checkout with further options:
				handler.open({
					name: 'FoodBot',
					description: 'Your Order',
					zipCode: true,
					amount: 2000
				});
				e.preventDefault();
			});
			$("#doneview2").click(function(){
				$("#view2container").hide();
			})

			// view 3
			window.addEventListener('popstate', function() { // close checkout on page navigation
				handler.close();
			});
			// called when MessengerExtensions is done loading
			window.extAsyncInit = function() {
				$("#view3button").click(function(){
					// document.getElementById("only_form").submit();
					MessengerExtensions.requestCloseBrowser(function success() {
						console.log("success");
					}, function error(err) {
						console.log(err);
					});
				})
			}
